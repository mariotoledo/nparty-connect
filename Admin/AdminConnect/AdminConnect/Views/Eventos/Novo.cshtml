@model CampeonatosNParty.Models.Database.Eventos
@{
    ViewBag.Title = "Novo";
    IEnumerable<CampeonatosNParty.Models.Database.TipoEvento> tipoEvento =
        (IEnumerable<CampeonatosNParty.Models.Database.TipoEvento>)ViewData["TipoEvento"];
    IEnumerable<CampeonatosNParty.Models.Database.Estado> estados =
        (IEnumerable<CampeonatosNParty.Models.Database.Estado>)ViewData["Estados"];
    IEnumerable<CampeonatosNParty.Models.Database.Eventos> eventos =
    (IEnumerable<CampeonatosNParty.Models.Database.Eventos>)ViewData["Eventos"];
    IEnumerable<AdminConnect.Models.Database.Organizador> organizadores =
    (IEnumerable<AdminConnect.Models.Database.Organizador>)ViewData["Organizadores"];
    CampeonatosNParty.Models.Database.Administrador user =
        (CampeonatosNParty.Models.Database.Administrador)Session["CurrentUser"];
}


<div class="page-header">
    <h1>Novo Evento <small>Complete as informações abaixo, e clique em "Salvar"</small></h1>
</div>

<ol class="breadcrumb">
    <li><a href="@Url.Content("~/Dashboard/")">Home</a></li>
    <li><a href="@Url.Content("~/Eventos/Gerenciar")">Gerenciar Eventos</a></li>
    <li class="active">Novo Evento</li>
</ol>

@{
    Html.RenderPartial("FlashMessage");
}

<form class="form" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="Nome">Nome</label>
        <input type="text" class="form-control input-lg" id="Nome" name="Nome" value="@Model.Nome" placeholder="Ex: Anime Friends 2014">
    </div>
    <div class="form-group">
        <label for="Nome" class="control-label">Tipo do evento</label>
        <select name="TipoEvento" id="TipoEvento" class="form-control input-lg">
            <option value="0">Selecione</option>
            @foreach (CampeonatosNParty.Models.Database.TipoEvento tipo in tipoEvento)
            {
                string selected = Model.TipoEvento == tipo.Id ? "selected" : "";
                <option @selected value="@tipo.Id">@tipo.Nome</option>
            }
        </select>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Endereço</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label for="Local" class="control-label">Local</label>
                        <input type="text" class="form-control" id="Local" value="@Model.Local" name="Local" placeholder="Ex: Faculdade Anhaguera, Bob's da Avenida Paulsita, Campo de Marte, etc.">
                    </div>
                    <div class="form-group">
                        <label for="Estado" class="control-label">Estado</label>
                        <select name="IdEstado" id="Estado" onchange="onEstadoSelected(this.value)" class="form-control">
                            <option value="0">Selecione</option>
                            @foreach (CampeonatosNParty.Models.Database.Estado estado in estados)
                            {
                                string selected = Model.IdEstado == estado.EstadoId ? "selected" : "";
                                <option @selected value="@estado.EstadoId">@estado.Sigla</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Cidade" class="control-label">Cidade</label>
                        <select name="IdCidade" id="Cidade" class="form-control" disabled></select>
                    </div>
                    <div class="form-group">
                        <label for="Organizador" class="control-label">Organizador</label>
                        <select name="IdOrganizador" id="Organizador" class="form-control">
                            @foreach (AdminConnect.Models.Database.Organizador organizador in organizadores)
                            {
                                string selected = organizador.Id == user.IdOrganizador ? "selected" : "";
                                <option @selected value="@organizador.Id">@organizador.Nome</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Datas</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label for="DataEventoInicio" class="control-label">Data e hora de início</label>
                        <div class='input-group date' id='dtInicioEvento'>
                            @{
                                string dataEvento = Model.DataEventoInicio.CompareTo(DateTime.MinValue) == 0 ? DateTime.Now.ToString("dd/MM/yyyy hh:mm") : Model.DataEventoInicio.ToString("dd/MM/yyyy hh:mm");
                            }
                            <input type='text' class="form-control" value="@dataEvento" id="DataEventoInicio" name="DataInicioEvento" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                @{
                                    string checkedString = Model.DataEventoFim != null && ((DateTime)Model.DataEventoFim).CompareTo(DateTime.MinValue) != 0 ? "checked" : "";
                                }
                                <input @checkedString type="checkbox" name="UnoMas" id="UnoMas" onclick="showOrHideEventEnd()"> Evento acontece em mais de 1 dia
                            </label>
                        </div>
                    </div>
                    <div class="form-group" id="EndEventDate" style="display: none;">
                        <label for="DataEventoFim" class="control-label">Data e hora de término</label>
                        <div class='input-group date' id='dtFimEvento'>
                            @{
                                string dataEventoFim = Model.DataEventoFim == null || ((DateTime)Model.DataEventoFim).CompareTo(DateTime.MinValue) == 0 ? DateTime.Now.ToString("dd/MM/yyyy hh:mm") : ((DateTime)Model.DataEventoFim).ToString("dd/MM/yyyy hh:mm");
                            }
                            <input value="@dataEventoFim" type='text' class="form-control" id="DataEventoFim" name="DataFimEvento" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Detalhes de divulgação</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label for="ImagemURL" class="control-label">Logo do evento</label>
                        <div class="radio">
                            <label>
                                <input type="radio" name="UsoDeLogo" id="optNewLogo" onclick="enableOrDisablePhotoControl(this.value)" value="1" checked>
                                Subir nova logo <button id="info" type="button" class="btn btn-xs btn-info" data-container="body" data-toggle="popover" data-placement="top" data-content="A imagem precisa ser no formato PNG. A idéia é que seja uma imagem do logo do evento, com transparência, não importa o tamanho."><span class="glyphicon glyphicon-info-sign"></span></button>
                                <input type="file" class="form-control" id="ImagemURL" name="ImagemURL">
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="UsoDeLogo" id="optChooseFromEvents" onclick="enableOrDisablePhotoControl(this.value)" value="2">
                                Usar imagens de outros eventos
                                <select id="Eventos" name="ImagemDeEvento" class="form-control" disabled>
                                    <option value="0">Selecione</option>
                                    @foreach (CampeonatosNParty.Models.Database.Eventos evento in eventos)
                                    {
                                        <option value="@evento.Id">@evento.Nome</option>
                                    }
                                </select>
                            </label>
                        </div>
                        <div class="radio">
                            <label>
                                <input type="radio" name="UsoDeLogo" id="optNoImage" onclick="enableOrDisablePhotoControl(this.value)" value="3">
                                Não subir nenhuma imagem
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Descricao">Descrição do evento (max de 2500 caracteres)</label>
                        <textarea name="Descricao" id="Descricao" class="form-control" rows="3" maxlength="2500">@Model.Descricao</textarea>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Salvar</button>
        <a href="@Url.Content("~/Eventos/Gerenciar")"  class="btn btn-default">Cancelar</a>
    </div>
</form>
@section Scripts{
    <script>
        $(function () {
            $('#info').popover()
            $('#dtInicioEvento').datetimepicker({
                language: 'pt-BR',
                pickTime: true,
                minDate: moment()
            });
            $('#dtFimEvento').datetimepicker({
                language: 'pt-BR',
                pickTime: true,
                minDate: moment()
            });

            if ($('#Estado').val()) {
                onEstadoSelected($('#Estado').val());
            }
        });

        function showOrHideEventEnd() {
            $unomas = $('#UnoMas');
            if ($unomas.is(':checked')) {
                $('#EndEventDate').show('fast');
            } else {
                $('#EndEventDate').hide('fast');
            }
        }

        function enableOrDisablePhotoControl(optionValue) {
            if (optionValue == 1) {
                $('#ImagemURL').prop('disabled', false);
                $('#Eventos').prop('disabled', true);
            } else if (optionValue == 2) {
                $('#ImagemURL').prop('disabled', true);
                $('#Eventos').prop('disabled', false);
            } else if (optionValue == 3) {
                $('#ImagemURL').prop('disabled', true);
                $('#Eventos').prop('disabled', true);
            }
        }

        function onEstadoSelected(idEstado) {
            if (idEstado == 0) {
                $('#Cidade').html('<option value="0"></option>');
                $('#Cidade').attr('disabled', true);
                return;
            }

            $('#Cidade').html('<option value="0">Carregando</option>');
            $('#Cidade').attr('disabled', true);
            $.ajax({
                url: '@Url.Content("~/Eventos/GetCidades?idEstado=")' + idEstado,
                success: function (data) {
                    $('#Cidade').html('');
                    if (data) {
                        $.each(data, function (index) {
                            $('#Cidade').append("<option value='" + data[index].CidadeId + "'>" + data[index].Nome + "</option>");
                        });
                    }
                    $('#Cidade').removeAttr('disabled');
                }
            });
        }
    </script>    
}
