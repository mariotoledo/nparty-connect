@model CampeonatosNParty.Models.StructModel.EditarEvento
@{
    ViewBag.Title = "Editar Evento";
    EixoX.Html.BootstrapPresenter<CampeonatosNParty.Models.StructModel.EditarEvento> presenter =
        EixoX.Html.BootstrapPresenter<CampeonatosNParty.Models.StructModel.EditarEvento>.GetInstance(UICulture);
    string errorMessage = (string)ViewData["ErrorMessage"];
    string successMessage = (string)ViewData["SuccessMessage"];

    string HasMoreDayInputValue = Model.DataEventoInicio != Model.DataEventoFim ? "checked" : "";
}
@{
    if (Model != null)
    {
        <ul class="breadcrumb">
            <li><a href="@Url.Content("~/Admin")">Admin</a> <span class="divider">/</span></li>
            <li><a href="@Url.Content("~/Admin/Eventos")">Eventos</a> <span class="divider">/</span></li>
            <li><a href="@Url.Content("~/Admin/DetalhesEvento/" + Model.Id)">@Model.Nome</a> <span class="divider">/</span></li>
            <li class="active">Editar</li>
        </ul>

        <h2>Editar Evento</h2>
        <form method="post" class="form-horizontal" enctype="multipart/form-data">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-error">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Atenção!</strong> @errorMessage
                </div>
            }
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    @successMessage
                </div>
            }
            <div class="row">
                <div class="span6">
                     @{ 
                        presenter.Render(this.Output, Model, "post".Equals(Request.HttpMethod, StringComparison.OrdinalIgnoreCase), "Id");
                        presenter.Render(this.Output, Model, "post".Equals(Request.HttpMethod, StringComparison.OrdinalIgnoreCase), "Nome");
                        <label class="control-label" for="TipoEvento">Tipo do Evento*</label>
                        <div class="controls">
                            <select name="TipoEvento" id="TipoEvento">
                                @foreach (CampeonatosNParty.Models.Database.TipoEvento item in CampeonatosNParty.Models.Database.TipoEvento.Select())
                                {
                                    string selected = Model.TipoEvento == item.Id ? "selected" : "";
                                    <option @selected value="@item.Id">@item.Nome</option>
                                }
                            </select>
                         </div><br/>
                                presenter.Render(this.Output, Model, "post".Equals(Request.HttpMethod, StringComparison.OrdinalIgnoreCase), "Local");
                        <label class="control-label" for="IdEstado">Estado*</label>
                        <div class="controls">
                            <select name="IdEstado" id="IdEstado" onchange="loadCities(this.value)">
                                @foreach (CampeonatosNParty.Models.Database.Estado item in CampeonatosNParty.Models.Database.Estado.Select().OrderBy("Sigla"))
                                {
                                    string selected = Model.IdEstado == item.EstadoId ? "selected" : "";
                                    <option @selected value="@item.EstadoId">@item.Sigla</option>
                                }
                            </select>
                        </div>
                        <br />
                        <label class="control-label" for="IdCidade">Cidade*</label>
                        <div class="controls">
                            <select name="IdCidade" id="IdCidade">
                                @foreach (CampeonatosNParty.Models.Database.Cidade item in CampeonatosNParty.Models.Database.Cidade.Select().Where("EstadoId", Model.IdEstado).OrderBy("Nome"))
                                {
                                    string selected = Model.IdCidade == item.CidadeId ? "selected" : "";
                                    <option @selected value="@item.CidadeId">@item.Nome</option>
                                }
                            </select>
                        </div><br />
                            
                     }
                </div>
                <div class="span6">
                    @{
                        presenter.Render(this.Output, Model, "post".Equals(Request.HttpMethod, StringComparison.OrdinalIgnoreCase), "ImagemURL");
                        <label for="DataEventoInicioDay" class="control-label">Data de início do evento</label>
                        <div class="controls">
                            <select name="DataEventoInicioDay" class="input-mini">
                                @for (int i = 1; i <= 31; i++)
                                {
                                    string selected = Model.DataEventoInicio.Day == i ? "selected" : "";
                                    <option @selected value="@i">@i.ToString()</option>
                                }
                            </select>
                            <select name="DataEventoInicioMonth" class="input-mini">
                                @for (int i = 1; i <= 12; i++)
                                {
                                    string selected = Model.DataEventoInicio.Month == i ? "selected" : "";
                                    <option @selected value="@i">@i.ToString()</option>
                                }
                            </select>
                            <select name="DataEventoInicioYear" class="input-small">
                                @for (int i = 0; i < 100; i++)
                                {
                                    int year = DateTime.Now.Year - i;
                                    string selected = Model.DataEventoInicio.Year == year ? "selected" : "";
                                    <option @selected value="@year">@year.ToString()</option>
                                }
                            </select>
                        </div><br />
                        <div class="controls">
                            <label class="checkbox">Evento ocorre em mais de um dia? <input type="checkbox" id="MoreDays" name="MoreDays" @HasMoreDayInputValue></label>
                        </div><br />
                        <div id="DataEventoFimParent">
                            <label for="DataEventoFimDay" class="control-label">Data de fim do evento</label>
                            <div class="controls">
                                <select name="DataEventoFimDay" class="input-mini">
                                    @for (int i = 1; i <= 31; i++)
                                    {
                                        string selected = Model.DataEventoFim.Day == i ? "selected" : "";
                                        <option @selected value="@i">@i.ToString()</option>
                                    }
                                </select>
                                <select name="DataEventofimMonth" class="input-mini">
                                    @for (int i = 1; i <= 12; i++)
                                    {
                                        string selected = Model.DataEventoFim.Month == i ? "selected" : "";
                                        <option @selected value="@i">@i.ToString()</option>
                                    }
                                </select>
                                <select name="DataEventoFimYear" class="input-small">
                                    @for (int i = 0; i < 100; i++)
                                    {
                                        int year = DateTime.Now.Year - i;
                                        string selected = Model.DataEventoFim.Year == year ? "selected" : "";
                                        <option @selected value="@year">@year.ToString()</option>
                                    }
                                </select>
                            </div><br />
                        </div>
                    }
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                    <button type="submit" class="btn btn-primary">Salvar</button>
                    <a class="btn" href="@Url.Content("~/Admin/DetalhesEvento/" + Model.Id)">Cancelar</a>
                </div>
            </div>
        </form>
    }
    else
    {
        <p>Cuidado: Usuário não encontrado</p>
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        hideOrShowInput();
        $('#MoreDays').bind('change', hideOrShowInput);
    });
    function hideOrShowInput() {
        if ($('#MoreDays').prop('checked')) {
            $('#DataEventoFimParent').show();
        } else {
            $('#DataEventoFimParent').hide();
        }
    }
   function loadCities(selectedCode) {
        $.ajax({
            url: "@Url.Content("~/Ajax/CarregarCidades/")" + selectedCode,
            success: function (json) {
                $('#Id_Cidade').prop('disabled', false);
                var optionArray = [];
                optionArray.push('<option value="">Selecione</option>');

                $.each(json, function (i, item) {
                    if (selectedCode == item.CidadeId) {
                        optionArray.push('<option value="' + item.CidadeId + '" selected="selected">' + item.Nome + '</option>');
                    }
                    else {
                        optionArray.push('<option value="' + item.CidadeId + '">' + item.Nome + '</option>');
                    }
                });


                $('#Id_Cidade').html(optionArray.join(''));
            }
        });
    }
</script>